[GLSL_VERTEX_SHADER]

uniform mat4 mvp;
uniform mat4 world;
uniform vec3 lightPos;
uniform float invRadius;

varying vec3 lightVec;

void main() {
	gl_Position = mvp * gl_Vertex; 
	
	vec4 worldPos =world * gl_Vertex;
	lightVec = invRadius * (lightPos - worldPos.xyz);
}


[GLSL_FRAGMENT_SHADER]

varying vec3 lightVec;

void main() {
	float depth2 = dot(lightVec, lightVec);
	float depth = sqrt(depth2);
		
	gl_FragColor = vec4(depth, depth2, 1.0, 1.0);
}
