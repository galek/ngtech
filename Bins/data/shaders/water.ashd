[GLSL_VERTEX_SHADER]

uniform mat4 mvp;
uniform mat4 projTransform;

varying vec2 texCoord;
varying vec4 projCoord;

void main() {
	gl_Position = mvp * gl_Vertex; 
	texCoord = gl_MultiTexCoord0.xy;
	
	projCoord = projTransform * gl_Vertex;
}


[GLSL_FRAGMENT_SHADER]

varying vec2 texCoord;
varying vec4 projCoord;

uniform sampler2D projMap;
uniform sampler2D dudvMap;

uniform float time;

void main() {
	vec3 noise = texture2D(dudvMap, texCoord * 20.0 + vec2(time, time) * 0.00005).xyz * 0.5;
	vec4 refrColor = texture2DProj(projMap, projCoord + vec4(noise, 0.0));
	
	gl_FragColor = refrColor * vec4(0.8, 0.9, 1.0, 1.0);
}