<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:l="clr-namespace:Sce.Atf.Wpf"
    xmlns:c="clr-namespace:Sce.Atf.Wpf.Controls"
    xmlns:b="clr-namespace:Sce.Atf.Wpf.Behaviors">

    <Style TargetType="{x:Type c:TreeListViewItem}">
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}"/>
        <Setter Property="b:AtfTreeViewBehavior.IsMultiSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
        <Setter Property="b:StyleBehaviors.Behaviors">
            <Setter.Value>
                <b:StyleBehaviorCollection>
                    <b:TreeViewItemLabelEditBehavior />
                </b:StyleBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="{x:Type IFrameworkInputElement}">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Rectangle />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TreeListViewItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <c:TreeGridViewRowPresenter 
                                x:Name="PART_Header" 
                                Content="{TemplateBinding Header}"
                                FirstColumnIndent="{Binding Level, Converter={c:LevelToIndentConverter}, RelativeSource={RelativeSource AncestorType={x:Type c:TreeListViewItem}}, ConverterParameter=19}"
                                Columns="{Binding Path=Columns,RelativeSource={RelativeSource AncestorType={x:Type c:TreeListView}}}">
                                <c:TreeGridViewRowPresenter.Expander>
                                    <Grid>
                                        <ToggleButton x:Name="Expander" Style="{DynamicResource {x:Static l:Resources.TreeViewItemExpanderStyleKey}}" ClickMode="Press"
                                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Grid>
                                </c:TreeGridViewRowPresenter.Expander>
                            </c:TreeGridViewRowPresenter>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <Trigger Property="b:AtfTreeViewBehavior.IsMultiSelected" Value="True">
                            <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Property="Background" />
                            <Setter Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" Property="Foreground" />
                        </Trigger>
                        <!--Test-->
                        <Trigger Property="b:AtfTreeViewBehavior.IsMultiSelected" Value="False">
                            <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Foreground" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="b:AtfTreeViewBehavior.IsMultiSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Property="Background" />
                            <Setter Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" Property="Foreground" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Foreground" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeListViewScrollStyle">
        <Setter Property="UIElement.Focusable" Value="False"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="False">
                                <GridViewHeaderRowPresenter Columns="{Binding Path=Columns,RelativeSource={RelativeSource AncestorType={x:Type c:TreeListView}}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                      KeyboardNavigation.DirectionalNavigation="Local"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      CanContentScroll="{TemplateBinding CanContentScroll}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </DockPanel>
                        <ScrollBar 
                            x:Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Minimum="0.0"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Value="{Binding Path=HorizontalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Cursor="Arrow"/>
                        <ScrollBar 
                            x:Name="PART_VerticalScrollBar"
                            Orientation="Vertical"
                            Grid.Column="1"
                            Minimum="0.0"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Value="{Binding Path=VerticalOffset,RelativeSource={RelativeSource TemplatedParent},Mode=OneWay}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Cursor="Arrow"/>
                        <DockPanel Grid.Column="1" Grid.Row="1" Background="{Binding Path=Background,ElementName=PART_VerticalScrollBar}" LastChildFill="False">
                            <Rectangle DockPanel.Dock="Left" Width="1" Fill="White" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <Rectangle DockPanel.Dock="Top" Height="1" Fill="White" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type c:TreeListView}">
        <Setter Property="ItemsSource" Value="{Binding Roots}"/>
        <Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="ItemTemplate" Value="{DynamicResource {x:Static l:Resources.DefaultTreeViewItemTemplateKey}}"/>
        <Setter Property="b:StyleBehaviors.Behaviors">
            <Setter.Value>
                <b:StyleBehaviorCollection>
                    <b:AtfTreeViewBehavior EnsureVisiblePath="{Binding EnsureVisiblePath}" SynchronisingSelection="{Binding InSelectionTransaction, Mode=OneWayToSource}"/>
                    <b:ContextMenuBehavior/>
                    <b:SelectionContextDragSourceBehavior/>
                    <b:ItemsControlDropTargetBehavior/>
                    <b:DragAutoScrollBehavior/>
                    <b:TreeViewDragHoverExpandBehavior />
                </b:StyleBehaviorCollection>
            </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:TreeListView}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer 
                            Style="{StaticResource TreeListViewScrollStyle}" Background="{TemplateBinding Background}"
                            Focusable="False" CanContentScroll="False"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>