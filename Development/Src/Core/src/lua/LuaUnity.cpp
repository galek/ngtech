#pragma once

#include "class.cpp"
#include "class_info.cpp"
#include "class_registry.cpp"
#include "class_rep.cpp"
#include "create_class.cpp"
#include "exception_handler.cpp"
#include "function.cpp"
#include "function_introspection.cpp"
#include "headertest.cpp"
#include "inheritance.cpp"
#include "lapi.c"
#include "lauxlib.c"
#include "lbaselib.c"
#include "lcode.c"
#include "ldblib.c"
#include "ldebug.c"
#include "ldo.c"
#include "ldump.c"
#include "lfunc.c"
#include "lgc.c"
#include "linit.c"
#include "link_compatibility.cpp"
#include "liolib.c"
#include "llex.c"
#include "lmathlib.c"
#include "lmem.c"
#include "loadlib.c"
#include "lobject.c"
#include "lopcodes.c"
#include "loslib.c"
#include "lparser.c"
#include "lstate.c"
#include "lstring.c"
#include "lstrlib.c"
#include "ltable.c"
#include "ltablib.c"
#include "ltm.c"
#include "LuaError.cpp"
#include "lundump.c"
#include "lvm.c"
#include "lzio.c"
#include "object_rep.cpp"
#include "open.cpp"
#include "operator.cpp"
#include "pcall.cpp"
#include "scope.cpp"
#include "set_package_preload.cpp"
#include "stack_content_by_name.cpp"
#include "weak_ref.cpp"
#include "wrapper_base.cpp"